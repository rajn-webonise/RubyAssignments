require "active_record"
require "byebug"
require 'yaml'

namespace :db do

 db_config = YAML::load(File.open('config/database.yml'))
 ActiveRecord::Base.establish_connection(db_config)

  desc 'Create the database'
  task :create do
    File.delete(db_config["database"]) if File.exists? db_config["database"]
    puts 'Database created'
  end

  desc 'Drop the database'
  task :drop do
    File.delete(db_config["database"]) if File.exists? db_config["database"]
    puts 'Database deleted'
  end

  desc "Migrate the database"
  task :migrate do
    ActiveRecord::Base.establish_connection(db_config)
    ActiveRecord::Migrator.migrate("db/migrations/")
    Rake::Task["db:schema"].invoke
    puts "Database migrated."
  end

  desc 'Generate schema for database'
  task :schema do
    ActiveRecord::Base.establish_connection(db_config)
    #require 'active_record/schema_dumper'
    filename = 'db/schema.rb'
    File.open(filename, "w:utf-8") do |file|
      ActiveRecord::SchemaDumper.dump(ActiveRecord::Base.connection, file)
    end
    puts "Schema generated/updated."
  end

  desc "Generate a migration file"
  task :migration do
    name = ARGV[1] || raise("Specify name: rake g:migration your_migration")
    timestamp = Time.now.strftime("%Y%m%d%H%M%S")
    path = File.expand_path("../db/migrations/#{timestamp}_#{name}.rb", __FILE__)
    migration_class = name.split("_").map(&:capitalize).join

    File.open(path, 'w') do |file|
      file.write <<-EOF
class #{migration_class} < ActiveRecord::Migration
  def self.up
  end
  def self.down
  end
end
      EOF
    end
    puts "Database migrated."
  end

end
